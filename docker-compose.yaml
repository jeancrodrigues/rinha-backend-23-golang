version: '3.5'
services:
  api1: &api
    image: a41f103d2cc9
#    hostname: api1
    depends_on:
      - db
      - cache
    expose:
      - "9999"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.25GB'
    environment:
      DATABASE_URL: postgres://pessoa:pessoa@db:5432/pessoa
      REDIS_URL: cache:6379

  api2: *api
#    # API - Inst√¢ncia 01
#    image: 594e6b96bbbe
#    hostname: api2
#    depends_on:
#      - db
#    expose:
#      - "9999"
#    deploy:
#      resources:
#        limits:
#          cpus: '0.25'
#          memory: '0.5GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - db
      - cache
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '0.25GB'

  cache:
    image: redis:7.2-alpine
    restart: always
#    ports:
#      - '6379:6379'
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.75B'
    command: redis-server --save "" --loglevel warning


  db: # Banco de dados
    image: postgres
    volumes:
#      - ./postgres.conf:/etc/postgresql/postgresql.conf
      - ./db-init-entrypoint.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    deploy:
      resources:
        limits:
          cpus: '0.90'
          memory: '1.5GB'
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: pessoa
      POSTGRES_PASSWORD: pessoa
      POSTGRES_DB: pessoa
    command:
      - "postgres"
      - "-c"
      - "max_connections=250"
      - "-c"
      - "shared_buffers=256MB"
